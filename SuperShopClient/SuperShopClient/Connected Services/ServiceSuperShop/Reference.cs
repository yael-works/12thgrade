//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 17.0.33122.133
// 
namespace SuperShopClient.ServiceSuperShop {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.KindAmountProduct))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.ProductToBuying))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.KindOfBuying))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.ProductToRecipe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.Recipe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.UsesProduct))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SuperShopClient.ServiceSuperShop.Products))]
    public partial class BaseEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Category : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private int KodCategField;
        
        private string NameteurField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KodCateg {
            get {
                return this.KodCategField;
            }
            set {
                if ((this.KodCategField.Equals(value) != true)) {
                    this.KodCategField = value;
                    this.RaisePropertyChanged("KodCateg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nameteur {
            get {
                return this.NameteurField;
            }
            set {
                if ((object.ReferenceEquals(this.NameteurField, value) != true)) {
                    this.NameteurField = value;
                    this.RaisePropertyChanged("Nameteur");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KindAmountProduct", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class KindAmountProduct : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private double GramsField;
        
        private int KodKindProductField;
        
        private string NameKindAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Grams {
            get {
                return this.GramsField;
            }
            set {
                if ((this.GramsField.Equals(value) != true)) {
                    this.GramsField = value;
                    this.RaisePropertyChanged("Grams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KodKindProduct {
            get {
                return this.KodKindProductField;
            }
            set {
                if ((this.KodKindProductField.Equals(value) != true)) {
                    this.KodKindProductField = value;
                    this.RaisePropertyChanged("KodKindProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKindAmount {
            get {
                return this.NameKindAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKindAmountField, value) != true)) {
                    this.NameKindAmountField = value;
                    this.RaisePropertyChanged("NameKindAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductToBuying", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class ProductToBuying : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private int AmountField;
        
        private SuperShopClient.ServiceSuperShop.KindOfBuying KodKindBuyingField;
        
        private SuperShopClient.ServiceSuperShop.Products KodProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SuperShopClient.ServiceSuperShop.KindOfBuying KodKindBuying {
            get {
                return this.KodKindBuyingField;
            }
            set {
                if ((object.ReferenceEquals(this.KodKindBuyingField, value) != true)) {
                    this.KodKindBuyingField = value;
                    this.RaisePropertyChanged("KodKindBuying");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SuperShopClient.ServiceSuperShop.Products KodProduct {
            get {
                return this.KodProductField;
            }
            set {
                if ((object.ReferenceEquals(this.KodProductField, value) != true)) {
                    this.KodProductField = value;
                    this.RaisePropertyChanged("KodProduct");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KindOfBuying", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class KindOfBuying : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private int KodKindBuyingField;
        
        private string NameKindBuyingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KodKindBuying {
            get {
                return this.KodKindBuyingField;
            }
            set {
                if ((this.KodKindBuyingField.Equals(value) != true)) {
                    this.KodKindBuyingField = value;
                    this.RaisePropertyChanged("KodKindBuying");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKindBuying {
            get {
                return this.NameKindBuyingField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKindBuyingField, value) != true)) {
                    this.NameKindBuyingField = value;
                    this.RaisePropertyChanged("NameKindBuying");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductToRecipe", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class ProductToRecipe : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private double AmountGramsField;
        
        private SuperShopClient.ServiceSuperShop.Products KodProductField;
        
        private SuperShopClient.ServiceSuperShop.Recipe KodRecipeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountGrams {
            get {
                return this.AmountGramsField;
            }
            set {
                if ((this.AmountGramsField.Equals(value) != true)) {
                    this.AmountGramsField = value;
                    this.RaisePropertyChanged("AmountGrams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SuperShopClient.ServiceSuperShop.Products KodProduct {
            get {
                return this.KodProductField;
            }
            set {
                if ((object.ReferenceEquals(this.KodProductField, value) != true)) {
                    this.KodProductField = value;
                    this.RaisePropertyChanged("KodProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SuperShopClient.ServiceSuperShop.Recipe KodRecipe {
            get {
                return this.KodRecipeField;
            }
            set {
                if ((object.ReferenceEquals(this.KodRecipeField, value) != true)) {
                    this.KodRecipeField = value;
                    this.RaisePropertyChanged("KodRecipe");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recipe", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Recipe : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private int AmountManaField;
        
        private int KodRecipeField;
        
        private string NameRecipeField;
        
        private bool StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmountMana {
            get {
                return this.AmountManaField;
            }
            set {
                if ((this.AmountManaField.Equals(value) != true)) {
                    this.AmountManaField = value;
                    this.RaisePropertyChanged("AmountMana");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KodRecipe {
            get {
                return this.KodRecipeField;
            }
            set {
                if ((this.KodRecipeField.Equals(value) != true)) {
                    this.KodRecipeField = value;
                    this.RaisePropertyChanged("KodRecipe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRecipe {
            get {
                return this.NameRecipeField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRecipeField, value) != true)) {
                    this.NameRecipeField = value;
                    this.RaisePropertyChanged("NameRecipe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsesProduct", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class UsesProduct : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private double AmountField;
        
        private System.DateTime DateUseField;
        
        private SuperShopClient.ServiceSuperShop.Products KodProductField;
        
        private int KodUseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUse {
            get {
                return this.DateUseField;
            }
            set {
                if ((this.DateUseField.Equals(value) != true)) {
                    this.DateUseField = value;
                    this.RaisePropertyChanged("DateUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SuperShopClient.ServiceSuperShop.Products KodProduct {
            get {
                return this.KodProductField;
            }
            set {
                if ((object.ReferenceEquals(this.KodProductField, value) != true)) {
                    this.KodProductField = value;
                    this.RaisePropertyChanged("KodProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KodUse {
            get {
                return this.KodUseField;
            }
            set {
                if ((this.KodUseField.Equals(value) != true)) {
                    this.KodUseField = value;
                    this.RaisePropertyChanged("KodUse");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Products", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Products : SuperShopClient.ServiceSuperShop.BaseEntity {
        
        private double AmountGmBagField;
        
        private double AmountGmMlayField;
        
        private double AmountMlayField;
        
        private SuperShopClient.ServiceSuperShop.Category KodCategField;
        
        private int KodProductField;
        
        private string NameProductField;
        
        private string PictureField;
        
        private bool StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountGmBag {
            get {
                return this.AmountGmBagField;
            }
            set {
                if ((this.AmountGmBagField.Equals(value) != true)) {
                    this.AmountGmBagField = value;
                    this.RaisePropertyChanged("AmountGmBag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountGmMlay {
            get {
                return this.AmountGmMlayField;
            }
            set {
                if ((this.AmountGmMlayField.Equals(value) != true)) {
                    this.AmountGmMlayField = value;
                    this.RaisePropertyChanged("AmountGmMlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountMlay {
            get {
                return this.AmountMlayField;
            }
            set {
                if ((this.AmountMlayField.Equals(value) != true)) {
                    this.AmountMlayField = value;
                    this.RaisePropertyChanged("AmountMlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SuperShopClient.ServiceSuperShop.Category KodCateg {
            get {
                return this.KodCategField;
            }
            set {
                if ((object.ReferenceEquals(this.KodCategField, value) != true)) {
                    this.KodCategField = value;
                    this.RaisePropertyChanged("KodCateg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KodProduct {
            get {
                return this.KodProductField;
            }
            set {
                if ((this.KodProductField.Equals(value) != true)) {
                    this.KodProductField = value;
                    this.RaisePropertyChanged("KodProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameProduct {
            get {
                return this.NameProductField;
            }
            set {
                if ((object.ReferenceEquals(this.NameProductField, value) != true)) {
                    this.NameProductField = value;
                    this.RaisePropertyChanged("NameProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Summery", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceNEW")]
    public partial class Summery : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AmountField;
        
        private string ProductNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSuperShop.ISuperService")]
    public interface ISuperService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/Hithul", ReplyAction="http://tempuri.org/ISuperService/HithulResponse")]
        System.Threading.Tasks.Task HithulAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyProduct", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyProductResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddProduct", ReplyAction="http://tempuri.org/ISuperService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(SuperShopClient.ServiceSuperShop.Products p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateProduct", ReplyAction="http://tempuri.org/ISuperService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(SuperShopClient.ServiceSuperShop.Products p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateProductAmount", ReplyAction="http://tempuri.org/ISuperService/UpdateProductAmountResponse")]
        System.Threading.Tasks.Task UpdateProductAmountAsync(SuperShopClient.ServiceSuperShop.Products p, double amount, SuperShopClient.ServiceSuperShop.KindAmountProduct kindAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProductsBySelect", ReplyAction="http://tempuri.org/ISuperService/GetProductsBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetProductsBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProductsExistsBySelect", ReplyAction="http://tempuri.org/ISuperService/GetProductsExistsBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetProductsExistsBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListProducts", ReplyAction="http://tempuri.org/ISuperService/GetListProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetListProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListProductsExists", ReplyAction="http://tempuri.org/ISuperService/GetListProductsExistsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetListProductsExistsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProductByCode", ReplyAction="http://tempuri.org/ISuperService/GetProductByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.Products> GetProductByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteProduct", ReplyAction="http://tempuri.org/ISuperService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(SuperShopClient.ServiceSuperShop.Products p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetImage", ReplyAction="http://tempuri.org/ISuperService/GetImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetImageAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProductToBuyingBySelect", ReplyAction="http://tempuri.org/ISuperService/GetProductToBuyingBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToBuying>> GetProductToBuyingBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddProductToBuying", ReplyAction="http://tempuri.org/ISuperService/AddProductToBuyingResponse")]
        System.Threading.Tasks.Task AddProductToBuyingAsync(SuperShopClient.ServiceSuperShop.ProductToBuying p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateAmountProductToBuying", ReplyAction="http://tempuri.org/ISuperService/UpdateAmountProductToBuyingResponse")]
        System.Threading.Tasks.Task UpdateAmountProductToBuyingAsync(SuperShopClient.ServiceSuperShop.ProductToBuying p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProductToBuyingByCode", ReplyAction="http://tempuri.org/ISuperService/GetProductToBuyingByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.ProductToBuying> GetProductToBuyingByCodeAsync(int code, int code1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteProductToBuying", ReplyAction="http://tempuri.org/ISuperService/DeleteProductToBuyingResponse")]
        System.Threading.Tasks.Task DeleteProductToBuyingAsync(SuperShopClient.ServiceSuperShop.ProductToBuying p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListProductsToBuying", ReplyAction="http://tempuri.org/ISuperService/GetListProductsToBuyingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToBuying>> GetListProductsToBuyingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProductToRecipeBySelect", ReplyAction="http://tempuri.org/ISuperService/GetProductToRecipeBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToRecipe>> GetProductToRecipeBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddProductToRecipe", ReplyAction="http://tempuri.org/ISuperService/AddProductToRecipeResponse")]
        System.Threading.Tasks.Task AddProductToRecipeAsync(SuperShopClient.ServiceSuperShop.ProductToRecipe p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateProductToRecipe", ReplyAction="http://tempuri.org/ISuperService/UpdateProductToRecipeResponse")]
        System.Threading.Tasks.Task UpdateProductToRecipeAsync(SuperShopClient.ServiceSuperShop.ProductToRecipe p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetProducToRecipetByCode", ReplyAction="http://tempuri.org/ISuperService/GetProducToRecipetByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.ProductToRecipe> GetProducToRecipetByCodeAsync(int code, int code1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteProductToRecipe", ReplyAction="http://tempuri.org/ISuperService/DeleteProductToRecipeResponse")]
        System.Threading.Tasks.Task DeleteProductToRecipeAsync(SuperShopClient.ServiceSuperShop.ProductToRecipe p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListProductToRecipe", ReplyAction="http://tempuri.org/ISuperService/GetListProductToRecipeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToRecipe>> GetListProductToRecipeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyProductToRecipe", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyProductToRecipeResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyProductToRecipeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyRecipe", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyRecipeResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyRecipeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetRecipeBySelect", ReplyAction="http://tempuri.org/ISuperService/GetRecipeBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Recipe>> GetRecipeBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddRecipe", ReplyAction="http://tempuri.org/ISuperService/AddRecipeResponse")]
        System.Threading.Tasks.Task AddRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateRecipe", ReplyAction="http://tempuri.org/ISuperService/UpdateRecipeResponse")]
        System.Threading.Tasks.Task UpdateRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetRecipeByCode", ReplyAction="http://tempuri.org/ISuperService/GetRecipeByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.Recipe> GetRecipeByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteRecipe", ReplyAction="http://tempuri.org/ISuperService/DeleteRecipeResponse")]
        System.Threading.Tasks.Task DeleteRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListRecipe", ReplyAction="http://tempuri.org/ISuperService/GetListRecipeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Recipe>> GetListRecipeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteStatuseRecipe", ReplyAction="http://tempuri.org/ISuperService/DeleteStatuseRecipeResponse")]
        System.Threading.Tasks.Task DeleteStatuseRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetUsesProductBySelect", ReplyAction="http://tempuri.org/ISuperService/GetUsesProductBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.UsesProduct>> GetUsesProductBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateUsesProduct", ReplyAction="http://tempuri.org/ISuperService/UpdateUsesProductResponse")]
        System.Threading.Tasks.Task UpdateUsesProductAsync(SuperShopClient.ServiceSuperShop.UsesProduct u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetUsesProductByCode", ReplyAction="http://tempuri.org/ISuperService/GetUsesProductByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.UsesProduct> GetUsesProductByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteUsesProduct", ReplyAction="http://tempuri.org/ISuperService/DeleteUsesProductResponse")]
        System.Threading.Tasks.Task DeleteUsesProductAsync(SuperShopClient.ServiceSuperShop.UsesProduct u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListUsesProducts", ReplyAction="http://tempuri.org/ISuperService/GetListUsesProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.UsesProduct>> GetListUsesProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyUsesProduct", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyUsesProductResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyUsesProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetkindAmountProductBySelect", ReplyAction="http://tempuri.org/ISuperService/GetkindAmountProductBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindAmountProduct>> GetkindAmountProductBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddkindAmountProduct", ReplyAction="http://tempuri.org/ISuperService/AddkindAmountProductResponse")]
        System.Threading.Tasks.Task AddkindAmountProductAsync(SuperShopClient.ServiceSuperShop.KindAmountProduct k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateKindAmountProduct", ReplyAction="http://tempuri.org/ISuperService/UpdateKindAmountProductResponse")]
        System.Threading.Tasks.Task UpdateKindAmountProductAsync(SuperShopClient.ServiceSuperShop.KindAmountProduct k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetKindAmountProductByCode", ReplyAction="http://tempuri.org/ISuperService/GetKindAmountProductByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.KindAmountProduct> GetKindAmountProductByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteKindAmountProduct", ReplyAction="http://tempuri.org/ISuperService/DeleteKindAmountProductResponse")]
        System.Threading.Tasks.Task DeleteKindAmountProductAsync(SuperShopClient.ServiceSuperShop.KindAmountProduct k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListKindAmountProduct", ReplyAction="http://tempuri.org/ISuperService/GetListKindAmountProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindAmountProduct>> GetListKindAmountProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyKindAmountProduct", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyKindAmountProductResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyKindAmountProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyKindOfBuying", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyKindOfBuyingResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyKindOfBuyingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetKindOfBuyingBySelect", ReplyAction="http://tempuri.org/ISuperService/GetKindOfBuyingBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindOfBuying>> GetKindOfBuyingBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddKindOfBuying", ReplyAction="http://tempuri.org/ISuperService/AddKindOfBuyingResponse")]
        System.Threading.Tasks.Task AddKindOfBuyingAsync(SuperShopClient.ServiceSuperShop.KindOfBuying k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateKindOfBuying", ReplyAction="http://tempuri.org/ISuperService/UpdateKindOfBuyingResponse")]
        System.Threading.Tasks.Task UpdateKindOfBuyingAsync(SuperShopClient.ServiceSuperShop.KindOfBuying k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetKindOfBuyingByCode", ReplyAction="http://tempuri.org/ISuperService/GetKindOfBuyingByCodeResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.KindOfBuying> GetKindOfBuyingByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/DeleteKindOfBuying", ReplyAction="http://tempuri.org/ISuperService/DeleteKindOfBuyingResponse")]
        System.Threading.Tasks.Task DeleteKindOfBuyingAsync(SuperShopClient.ServiceSuperShop.KindOfBuying k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListKindOfBuying", ReplyAction="http://tempuri.org/ISuperService/GetListKindOfBuyingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindOfBuying>> GetListKindOfBuyingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetNextKeyCategory", ReplyAction="http://tempuri.org/ISuperService/GetNextKeyCategoryResponse")]
        System.Threading.Tasks.Task<int> GetNextKeyCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetCategoryBySelect", ReplyAction="http://tempuri.org/ISuperService/GetCategoryBySelectResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Category>> GetCategoryBySelectAsync(string nameField, string st, bool contains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/AddCategory", ReplyAction="http://tempuri.org/ISuperService/AddCategoryResponse")]
        System.Threading.Tasks.Task AddCategoryAsync(SuperShopClient.ServiceSuperShop.Category k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/UpdateCategory", ReplyAction="http://tempuri.org/ISuperService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task UpdateCategoryAsync(SuperShopClient.ServiceSuperShop.Category k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetCategory", ReplyAction="http://tempuri.org/ISuperService/GetCategoryResponse")]
        System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.Category> GetCategoryAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetListCategory", ReplyAction="http://tempuri.org/ISuperService/GetListCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Category>> GetListCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISuperService/GetUseByTime", ReplyAction="http://tempuri.org/ISuperService/GetUseByTimeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Summery>> GetUseByTimeAsync(string time, int month, int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISuperServiceChannel : SuperShopClient.ServiceSuperShop.ISuperService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SuperServiceClient : System.ServiceModel.ClientBase<SuperShopClient.ServiceSuperShop.ISuperService>, SuperShopClient.ServiceSuperShop.ISuperService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SuperServiceClient() : 
                base(SuperServiceClient.GetDefaultBinding(), SuperServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISuperService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SuperServiceClient.GetBindingForEndpoint(endpointConfiguration), SuperServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SuperServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SuperServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task HithulAsync() {
            return base.Channel.HithulAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyProductAsync() {
            return base.Channel.GetNextKeyProductAsync();
        }
        
        public System.Threading.Tasks.Task AddProductAsync(SuperShopClient.ServiceSuperShop.Products p) {
            return base.Channel.AddProductAsync(p);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(SuperShopClient.ServiceSuperShop.Products p) {
            return base.Channel.UpdateProductAsync(p);
        }
        
        public System.Threading.Tasks.Task UpdateProductAmountAsync(SuperShopClient.ServiceSuperShop.Products p, double amount, SuperShopClient.ServiceSuperShop.KindAmountProduct kindAmount) {
            return base.Channel.UpdateProductAmountAsync(p, amount, kindAmount);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetProductsBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetProductsBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetProductsExistsBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetProductsExistsBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetListProductsAsync() {
            return base.Channel.GetListProductsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Products>> GetListProductsExistsAsync() {
            return base.Channel.GetListProductsExistsAsync();
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.Products> GetProductByCodeAsync(int code) {
            return base.Channel.GetProductByCodeAsync(code);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(SuperShopClient.ServiceSuperShop.Products p) {
            return base.Channel.DeleteProductAsync(p);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetImageAsync(string fileName) {
            return base.Channel.GetImageAsync(fileName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToBuying>> GetProductToBuyingBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetProductToBuyingBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task AddProductToBuyingAsync(SuperShopClient.ServiceSuperShop.ProductToBuying p) {
            return base.Channel.AddProductToBuyingAsync(p);
        }
        
        public System.Threading.Tasks.Task UpdateAmountProductToBuyingAsync(SuperShopClient.ServiceSuperShop.ProductToBuying p) {
            return base.Channel.UpdateAmountProductToBuyingAsync(p);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.ProductToBuying> GetProductToBuyingByCodeAsync(int code, int code1) {
            return base.Channel.GetProductToBuyingByCodeAsync(code, code1);
        }
        
        public System.Threading.Tasks.Task DeleteProductToBuyingAsync(SuperShopClient.ServiceSuperShop.ProductToBuying p) {
            return base.Channel.DeleteProductToBuyingAsync(p);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToBuying>> GetListProductsToBuyingAsync() {
            return base.Channel.GetListProductsToBuyingAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToRecipe>> GetProductToRecipeBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetProductToRecipeBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task AddProductToRecipeAsync(SuperShopClient.ServiceSuperShop.ProductToRecipe p) {
            return base.Channel.AddProductToRecipeAsync(p);
        }
        
        public System.Threading.Tasks.Task UpdateProductToRecipeAsync(SuperShopClient.ServiceSuperShop.ProductToRecipe p) {
            return base.Channel.UpdateProductToRecipeAsync(p);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.ProductToRecipe> GetProducToRecipetByCodeAsync(int code, int code1) {
            return base.Channel.GetProducToRecipetByCodeAsync(code, code1);
        }
        
        public System.Threading.Tasks.Task DeleteProductToRecipeAsync(SuperShopClient.ServiceSuperShop.ProductToRecipe p) {
            return base.Channel.DeleteProductToRecipeAsync(p);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.ProductToRecipe>> GetListProductToRecipeAsync() {
            return base.Channel.GetListProductToRecipeAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyProductToRecipeAsync() {
            return base.Channel.GetNextKeyProductToRecipeAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyRecipeAsync() {
            return base.Channel.GetNextKeyRecipeAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Recipe>> GetRecipeBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetRecipeBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task AddRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r) {
            return base.Channel.AddRecipeAsync(r);
        }
        
        public System.Threading.Tasks.Task UpdateRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r) {
            return base.Channel.UpdateRecipeAsync(r);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.Recipe> GetRecipeByCodeAsync(int code) {
            return base.Channel.GetRecipeByCodeAsync(code);
        }
        
        public System.Threading.Tasks.Task DeleteRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r) {
            return base.Channel.DeleteRecipeAsync(r);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Recipe>> GetListRecipeAsync() {
            return base.Channel.GetListRecipeAsync();
        }
        
        public System.Threading.Tasks.Task DeleteStatuseRecipeAsync(SuperShopClient.ServiceSuperShop.Recipe r) {
            return base.Channel.DeleteStatuseRecipeAsync(r);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.UsesProduct>> GetUsesProductBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetUsesProductBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task UpdateUsesProductAsync(SuperShopClient.ServiceSuperShop.UsesProduct u) {
            return base.Channel.UpdateUsesProductAsync(u);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.UsesProduct> GetUsesProductByCodeAsync(int code) {
            return base.Channel.GetUsesProductByCodeAsync(code);
        }
        
        public System.Threading.Tasks.Task DeleteUsesProductAsync(SuperShopClient.ServiceSuperShop.UsesProduct u) {
            return base.Channel.DeleteUsesProductAsync(u);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.UsesProduct>> GetListUsesProductsAsync() {
            return base.Channel.GetListUsesProductsAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyUsesProductAsync() {
            return base.Channel.GetNextKeyUsesProductAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindAmountProduct>> GetkindAmountProductBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetkindAmountProductBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task AddkindAmountProductAsync(SuperShopClient.ServiceSuperShop.KindAmountProduct k) {
            return base.Channel.AddkindAmountProductAsync(k);
        }
        
        public System.Threading.Tasks.Task UpdateKindAmountProductAsync(SuperShopClient.ServiceSuperShop.KindAmountProduct k) {
            return base.Channel.UpdateKindAmountProductAsync(k);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.KindAmountProduct> GetKindAmountProductByCodeAsync(int code) {
            return base.Channel.GetKindAmountProductByCodeAsync(code);
        }
        
        public System.Threading.Tasks.Task DeleteKindAmountProductAsync(SuperShopClient.ServiceSuperShop.KindAmountProduct k) {
            return base.Channel.DeleteKindAmountProductAsync(k);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindAmountProduct>> GetListKindAmountProductAsync() {
            return base.Channel.GetListKindAmountProductAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyKindAmountProductAsync() {
            return base.Channel.GetNextKeyKindAmountProductAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyKindOfBuyingAsync() {
            return base.Channel.GetNextKeyKindOfBuyingAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindOfBuying>> GetKindOfBuyingBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetKindOfBuyingBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task AddKindOfBuyingAsync(SuperShopClient.ServiceSuperShop.KindOfBuying k) {
            return base.Channel.AddKindOfBuyingAsync(k);
        }
        
        public System.Threading.Tasks.Task UpdateKindOfBuyingAsync(SuperShopClient.ServiceSuperShop.KindOfBuying k) {
            return base.Channel.UpdateKindOfBuyingAsync(k);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.KindOfBuying> GetKindOfBuyingByCodeAsync(int code) {
            return base.Channel.GetKindOfBuyingByCodeAsync(code);
        }
        
        public System.Threading.Tasks.Task DeleteKindOfBuyingAsync(SuperShopClient.ServiceSuperShop.KindOfBuying k) {
            return base.Channel.DeleteKindOfBuyingAsync(k);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.KindOfBuying>> GetListKindOfBuyingAsync() {
            return base.Channel.GetListKindOfBuyingAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextKeyCategoryAsync() {
            return base.Channel.GetNextKeyCategoryAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Category>> GetCategoryBySelectAsync(string nameField, string st, bool contains) {
            return base.Channel.GetCategoryBySelectAsync(nameField, st, contains);
        }
        
        public System.Threading.Tasks.Task AddCategoryAsync(SuperShopClient.ServiceSuperShop.Category k) {
            return base.Channel.AddCategoryAsync(k);
        }
        
        public System.Threading.Tasks.Task UpdateCategoryAsync(SuperShopClient.ServiceSuperShop.Category k) {
            return base.Channel.UpdateCategoryAsync(k);
        }
        
        public System.Threading.Tasks.Task<SuperShopClient.ServiceSuperShop.Category> GetCategoryAsync(int code) {
            return base.Channel.GetCategoryAsync(code);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Category>> GetListCategoryAsync() {
            return base.Channel.GetListCategoryAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SuperShopClient.ServiceSuperShop.Summery>> GetUseByTimeAsync(string time, int month, int year) {
            return base.Channel.GetUseByTimeAsync(time, month, year);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISuperService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISuperService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/WcfServiceShop/SuperService/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return SuperServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISuperService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return SuperServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISuperService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ISuperService,
        }
    }
}
